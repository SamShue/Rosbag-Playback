function plotTwistPath(bag, color)

% xvec = zeros(length(msgs));
% yvec = zeros(length(msgs));
xvec = []; yvec = [];

bagselect = select(bag, 'MessageType', 'geometry_msgs/Twist');
ts = timeseries(bagselect, 'Linear.X', 'Angular.Z');
tsData = ts.Data;
tsTime = ts.Time;
tsTimeDt = diff(ts.Time);
tsTimeDt = [tsTimeDt; 0];

pose = [0, 0, 0]; % <x,y,theta>
for ii = 1:length(tsData)
    v = tsData(ii,1);
    w = tsData(ii,2);
    d_t = tsTimeDt(ii); % assuming th

    theta = pose(3);
    r = v/w;

    s = sin(theta);
    c = cos(theta);
    s_th = sin(theta+w*d_t);
    c_th = cos(theta+w*d_t);
    if(w<.05)
        %basically robot is going straight
        pose(1) = pose(1) + (v*c_th)*d_t;
        pose(2) = pose(2) + (v*s_th)*d_t;
        pose(3) = pose(3) + w*d_t;
    else
        %robot is turning
        pose(:,1)= pose(1) + (-r*s)+(r*s_th);
        pose(:,2)= pose(2) +( r*c)-(r*c_th);
        pose(:,3)= pose(3) + w*d_t;
    end

    xvec = [xvec, pose(1)];
    yvec = [yvec, pose(2)];
end

if(nargin < 3)
    plot(xvec, yvec, 'red');
else
    plot(xvec, yvec, color);
end
xlabel('meters'); ylabel('meters');

end
